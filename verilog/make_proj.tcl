#*****************************************************************************************
# Vivado (TM) v2017.4 (64-bit)
#
# make_proj.tcl: Tcl script for re-creating project 'Kiwisdr'
#
# Generated by Vivado on Tue Aug 20 19:29:19 CEST 2019
# IP Build 2085800 on Fri Dec 15 22:25:07 MST 2017
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (make_proj.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_add_u31b/ipcore_add_u31b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_bram_16k_16b/ipcore_bram_16k_16b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_bram_16k_1b_1k_16b/ipcore_bram_16k_1b_1k_16b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_bram_256_16b_4k_1b/ipcore_bram_256_16b_4k_1b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_dds_sin_cos_13b_15b_48b/ipcore_dds_sin_cos_13b_15b_48b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_bram_1k_16b/ipcore_bram_1k_16b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_mult_20b_20b_40b/ipcore_mult_20b_20b_40b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_bram_512_32b/ipcore_bram_512_32b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_bram_gps_16k_1b_4k_4b/ipcore_bram_gps_16k_1b_4k_4b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_bram_gps_4k_12b/ipcore_bram_gps_4k_12b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_bram_8k_16b/ipcore_bram_8k_16b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_add_u32b/ipcore_add_u32b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_acc_u32b/ipcore_acc_u32b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_bram_8k_32b/ipcore_bram_8k_32b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_bram_32k_1b_2k_16b/ipcore_bram_32k_1b_2k_16b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_add_u30b/ipcore_add_u30b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_bram_cpu_2k_16b/ipcore_bram_cpu_2k_16b.xci"
#    "/home/cmayer/vivado_test/Kiwisdr/Kiwisdr.srcs/sources_1/ip/ipcore_dds_sin_cos_13b_15b/ipcore_dds_sin_cos_13b_15b.xci"
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/gps/cacode.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/cic_comb.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/cic_integrator.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/cic_wf2.vh"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/cic_wf1.vh"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/kiwi.vh"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/cic_rx2.vh"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/cic_rx1.vh"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/kiwi.gen.vh"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/cic_prune_var.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/cpu.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/gps/demod.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/gps/e1bcode.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/gen.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/gps/gps.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/host.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/ip/ip_acc_u32b.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/ip/ip_add_u30b.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/ip/ip_add_u32b.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/ip/ip_dds_sin_cos_13b_15b.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/ip/ip_dds_sin_cos_13b_15b_48b.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/iq_mixer.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/iq_sampler_8k_32b.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/gps/logger.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/support/mux.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/receiver.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/rx.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/gps/sampler.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/support/sync_pulse.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/support/sync_wire.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/waterfall_1cic.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/kiwi.v"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/rx/cic_rx3.vh"
#    "/home/cmayer/Software/Beagle_SDR_GPS/verilog/KiwiSDR.xdc"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set project_name "KiwiSDR"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set project_name $::user_project_name
}

variable script_file
set script_file "make_proj.tcl"

# Help information for this script
proc help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < [llength $::argc]} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set project_name [lindex $::argv $i] }
      "--help"         { help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}
puts "==================== NAME: ${project_name} ===================="

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/Kiwisdr"]"

# Create project
create_project ${project_name} ./${project_name} -part xc7a35tftg256-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
# None

# Set project properties
set obj [current_project]
set_property \
    -dict [list corecontainer.enable {1} \
               default_lib {xil_defaultlib} \
               dsa.num_compute_units {60} \
               ip_cache_permissions {read write} \
               ip_output_repo "$proj_dir/${project_name}.cache/ip" \
               part {xc7a35tftg256-1} \
               sim.ip.auto_export_scripts {1} \
               xpm_libraries {XPM_MEMORY} ] \
    [current_project]

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set files [ list "[file normalize ${origin_dir}/gps/cacode.v]" \
                "[file normalize ${origin_dir}/rx/cic_comb.v]" \
                "[file normalize ${origin_dir}/rx/cic_integrator.v]" \
                "[file normalize ${origin_dir}/rx/cic_wf2.vh]" \
                "[file normalize ${origin_dir}/rx/cic_wf1.vh]" \
                "[file normalize ${origin_dir}/kiwi.vh]" \
                "[file normalize ${origin_dir}/rx/cic_rx2.vh]" \
                "[file normalize ${origin_dir}/rx/cic_rx1.vh]" \
                "[file normalize ${origin_dir}/kiwi.gen.vh]" \
                "[file normalize ${origin_dir}/rx/cic_prune_var.v]" \
                "[file normalize ${origin_dir}/cpu.v]" \
                "[file normalize ${origin_dir}/gps/demod.v]" \
                "[file normalize ${origin_dir}/gps/e1bcode.v]" \
                "[file normalize ${origin_dir}/rx/gen.v]" \
                "[file normalize ${origin_dir}/gps/gps.v]" \
                "[file normalize ${origin_dir}/host.v]" \
                "[file normalize ${origin_dir}/ip/ip_acc_u32b.v]" \
                "[file normalize ${origin_dir}/ip/ip_add_u30b.v]" \
                "[file normalize ${origin_dir}/ip/ip_add_u32b.v]" \
                "[file normalize ${origin_dir}/ip/ip_dds_sin_cos_13b_15b.v]" \
                "[file normalize ${origin_dir}/ip/ip_dds_sin_cos_13b_15b_48b.v]" \
                "[file normalize ${origin_dir}/rx/iq_mixer.v]" \
                "[file normalize ${origin_dir}/rx/iq_sampler_8k_32b.v]" \
                "[file normalize ${origin_dir}/gps/logger.v]" \
                "[file normalize ${origin_dir}/support/mux.v]" \
                "[file normalize ${origin_dir}/rx/receiver.v]" \
                "[file normalize ${origin_dir}/rx/rx.v]" \
                "[file normalize ${origin_dir}/gps/sampler.v]" \
                "[file normalize ${origin_dir}/support/sync_pulse.v]" \
                "[file normalize ${origin_dir}/support/sync_wire.v]" \
                "[file normalize ${origin_dir}/rx/waterfall_1cic.v]" \
                "[file normalize ${origin_dir}/kiwi.v]" \
                "[file normalize ${origin_dir}/rx/cic_rx3.vh]" \
               ]
add_files -norecurse -fileset [get_filesets sources_1] $files

proc add_verilog_header_file fn {
    set file [file normalize $fn]
    set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
    set_property -name "file_type" -value "Verilog Header" -objects $file_obj
}

# Set 'sources_1' fileset file properties for remote files
add_verilog_header_file "$origin_dir/rx/cic_wf2.vh"
add_verilog_header_file "$origin_dir/rx/cic_wf1.vh"
add_verilog_header_file "$origin_dir/kiwi.vh"
add_verilog_header_file "$origin_dir/rx/cic_rx2.vh"
add_verilog_header_file "$origin_dir/rx/cic_rx1.vh"
add_verilog_header_file "$origin_dir/kiwi.gen.vh"
add_verilog_header_file "$origin_dir/rx/cic_rx3.vh"




# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set_property -name "top" -value "KiwiSDR" -objects [get_filesets sources_1]


set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_add_u31b/ipcore_add_u31b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_bram_16k_16b/ipcore_bram_16k_16b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_bram_16k_1b_1k_16b/ipcore_bram_16k_1b_1k_16b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_bram_256_16b_4k_1b/ipcore_bram_256_16b_4k_1b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_dds_sin_cos_13b_15b_48b/ipcore_dds_sin_cos_13b_15b_48b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_bram_1k_16b/ipcore_bram_1k_16b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_mult_20b_20b_40b/ipcore_mult_20b_20b_40b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_bram_512_32b/ipcore_bram_512_32b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_bram_gps_16k_1b_4k_4b/ipcore_bram_gps_16k_1b_4k_4b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_bram_gps_4k_12b/ipcore_bram_gps_4k_12b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_bram_8k_16b/ipcore_bram_8k_16b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_add_u32b/ipcore_add_u32b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_acc_u32b/ipcore_acc_u32b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_bram_8k_32b/ipcore_bram_8k_32b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_bram_32k_1b_2k_16b/ipcore_bram_32k_1b_2k_16b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_add_u30b/ipcore_add_u30b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_bram_cpu_2k_16b/ipcore_bram_cpu_2k_16b.xci]" \
               "[file normalize ${origin_dir}/../verilog.Vivado.2017.4.ip/ipcore_dds_sin_cos_13b_15b/ipcore_dds_sin_cos_13b_15b.xci]" \
              ]
set imported_files [import_files -fileset sources_1 $files]

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/KiwiSDR.xdc]"
set file_added [add_files -norecurse -fileset \
                    [get_filesets constrs_1] \
                    $file]
#-- set file "$origin_dir/KiwiSDR.xdc"
#-- set file [file normalize $file]
set_property -name "file_type" -value "XDC" \
    -objects [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "KiwiSDR" -objects $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 \
        -part xc7a35tftg256-1 \
        -flow {Vivado Synthesis 2017} \
        -strategy "Vivado Synthesis Defaults" \
        -report_strategy {No Reports} \
        -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2017" [get_runs synth_1]
}
set obj [get_runs synth_1]
puts "==================== $obj ===================="
set_property \
    -dict [ list set_report_strategy_name {1} \
                report_strategy {Vivado Synthesis Default Reports} \
                set_report_strategy_name {0} ] \
    $obj


proc gen_report {name type steps runs} {
    if { [ string equal [get_report_configs -of_objects [get_runs ${runs}] ${name}] "" ] } {
        create_report_config -report_name ${name} -report_type ${type} -steps ${steps} -runs ${runs}
    }
    set obj [get_report_configs -of_objects [get_runs ${runs}] ${name}]
    if { $obj != "" } {
        set_property -name "is_enabled" -value "0" -objects $obj
    }
}
gen_report synth_1_synth_report_utilization_0 report_utilization:1.0 synth_design synth_1
# # Create 'synth_1_synth_report_utilization_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
#   create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
# }
# set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
# if { $obj != "" } {

# }
set obj [get_runs synth_1]
set_property -dict [ list part {xc7a35tftg256-1} \
                         strategy {Vivado Synthesis Defaults} ] $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 \
        -part xc7a35tftg256-1 \
        -flow {Vivado Implementation 2017} \
        -strategy "Vivado Implementation Defaults" \
        -report_strategy {No Reports} \
        -constrset constrs_1 \
        -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2017" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property -dict [ list set_report_strategy_name {1} \
                         report_strategy {Vivado Implementation Default Reports} \
                         set_report_strategy_name {0} ] $obj


gen_report impl_1_init_report_timing_summary_0 report_timing_summary:1.0 init_design impl_1
gen_report impl_1_opt_report_drc_0             report_drc:1.0            opt_design impl_1
gen_report impl_1_opt_report_timing_summary_0 report_timing_summary:1.0 opt_design impl_1
gen_report impl_1_power_opt_report_timing_summary_0 report_timing_summary:1.0 power_opt_design impl_1
gen_report impl_1_place_report_io_0 report_io:1.0 place_design impl_1
gen_report impl_1_place_report_utilization_0 report_utilization:1.0 place_design impl_1
gen_report impl_1_place_report_control_sets_0 report_control_sets:1.0 place_design impl_1
gen_report impl_1_place_report_incremental_reuse_0 report_incremental_reuse:1.0 place_design impl_1
gen_report impl_1_place_report_incremental_reuse_1 report_incremental_reuse:1.0 place_design impl_1
gen_report impl_1_place_report_timing_summary_0 report_timing_summary:1.0 place_design impl_1
gen_report impl_1_post_place_power_opt_report_timing_summary_0 report_timing_summary:1.0 post_place_power_opt_design impl_1
gen_report impl_1_phys_opt_report_timing_summary_0 report_timing_summary:1.0 phys_opt_design impl_1
gen_report impl_1_route_report_drc_0 report_drc:1.0 route_design impl_1
gen_report impl_1_route_report_methodology_0 report_methodology:1.0 route_design impl_1
gen_report impl_1_route_report_power_0 report_power:1.0 route_design impl_1
gen_report impl_1_route_report_route_status_0 report_route_status:1.0 route_design impl_1
gen_report impl_1_route_report_timing_summary_0 report_timing_summary:1.0 route_design impl_1
gen_report impl_1_route_report_incremental_reuse_0 report_incremental_reuse:1.0 route_design impl_1
gen_report impl_1_route_report_clock_utilization_0 report_clock_utilization:1.0 route_design impl_1
gen_report impl_1_post_route_phys_opt_report_timing_summary_0 report_timing_summary:1.0 post_route_phys_opt_design impl_1


# # Create 'impl_1_init_report_timing_summary_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj

# }
# Create 'impl_1_opt_report_drc_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
#   create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
# if { $obj != "" } {

# }
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
#     create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
# if { $obj != "" } {
#     set_property -name "is_enabled" -value "0" -objects $obj

# }
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
#     create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
# if { $obj != "" } {
#     set_property -name "is_enabled" -value "0" -objects $obj

# }
# Create 'impl_1_place_report_io_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
#     create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
# if { $obj != "" } {

# }
# Create 'impl_1_place_report_utilization_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
#     create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
# if { $obj != "" } {

# }
# Create 'impl_1_place_report_control_sets_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
#     create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
# if { $obj != "" } {

# }
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
#     create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
# if { $obj != "" } {
#     set_property -name "is_enabled" -value "0" -objects $obj
# }
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
#     create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj

# }
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
#     create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
# if { $obj != "" } {
#     set_property -name "is_enabled" -value "0" -objects $obj
# }
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
#     create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
# if { $obj != "" } {
#     set_property -name "is_enabled" -value "0" -objects $obj

# }
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
#     create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj

# }
# Create 'impl_1_route_report_drc_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
# if { $obj != "" } {

# }
# Create 'impl_1_route_report_methodology_0' report (if not found)
#  if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
# if { $obj != "" } {

# }
# Create 'impl_1_route_report_power_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
# if { $obj != "" } {

# }
# Create 'impl_1_route_report_route_status_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
# if { $obj != "" } {

# }
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
# if { $obj != "" } {

# }
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
# if { $obj != "" } {

# }
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
# if { $obj != "" } {

# }
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
# if { $obj != "" } {

# }
set_property \
    -dict [ list part {xc7a35tftg256-1} \
                strategy {Vivado Implementation Defaults} \
                steps.write_bitstream.args.readback_file {0} \
                steps.write_bitstream.args.verbose {0} ] \
    [get_runs impl_1]

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:$project_name"

# launch_runs synth_1 -jobs 6
# launch_runs impl_1 -jobs 6
# launch_runs impl_1 -to_step write_bitstream -jobs 6
